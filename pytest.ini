[pytest]
markers =
    optional: Optional developer / exploratory tests (disabled unless G6_ENABLE_OPTIONAL_TESTS=1)
    slow: Slow tests (enable with G6_ENABLE_SLOW_TESTS=1 or run -m slow explicitly)
    integration: Higher-level integration tests (may spin threads / external deps)
    perf: Performance smoke tests (timing thresholds / basic perf assertions)
    asyncio: Mark an async test function (managed by custom event_loop fixture)
    metrics_no_reset: Opt-out of the autouse metrics registry reset fixture (test depends on persistence or handles its own isolation)
    broker: Tests that require broker provider initialization / credentials (enable with G6_ENABLE_BROKER_TESTS=1)
    serial: Tests that must not run under parallel/xdist due to global mutable state
; Keep defaults lean and deterministic. Use -n auto explicitly for parallel.
addopts = -q -r fE -W ignore::ResourceWarning
; Restrict discovery to the dedicated tests directory to avoid scanning large data/runtime trees
testpaths = tests
; Prevent recursion into directories with transient generated files or non-test assets
norecursedirs = 
    .git 
    __pycache__ 
    build 
    dist 
    data 
    logs 
    archive 
    grafana 
    prometheus 
    docs 
    scripts 
    config
; Legacy/demo tests were moved under archive/tests_legacy to avoid accidental discovery.
; To run them explicitly: `pytest -q archive/tests_legacy`
filterwarnings =
    ignore:datetime\.datetime\.utcfromtimestamp\(\) is deprecated:DeprecationWarning:pytz\\.tzinfo
    ignore:datetime\.datetime\.utcfromtimestamp\(\) is deprecated:DeprecationWarning:influxdb_client\\.client\\.write\\.point
    ignore:datetime\.datetime\.utcfromtimestamp\(\) is deprecated:DeprecationWarning:reactivex\\.internal\\.constants
    # Broad fallback suppression for any remaining third-party modules emitting utcfromtimestamp deprecation
    ignore:datetime\.datetime\.utcfromtimestamp\(\) is deprecated:DeprecationWarning:
    # Suppress legacy deep metrics import warnings entirely (facade is the supported path)
    ignore:.*Importing 'src\.metrics\.metrics' directly is deprecated.*:DeprecationWarning:
    # Suppress planned removal notice for legacy registration shim
    ignore:.*metrics\._register legacy shim is deprecated.*:DeprecationWarning:
    # Suppress pipeline collector deprecation notices routed via warnings
    ignore:G6_PIPELINE_COLLECTOR.*deprecated:DeprecationWarning:
    # Suppress implicit env credentials construction deprecation in provider bootstrap
    ignore:Implicit env credential construction via create_provider\('kite', \{\}\) is deprecated:DeprecationWarning:
    # Suppress singular collectors namespace import deprecation during migration
    ignore:Importing from 'src\.collector' is deprecated; use 'src\.collectors\..*' instead\.:DeprecationWarning:
    # Suppress reactivex's utcnow deprecation spam (upstream)
    ignore:datetime\.datetime\.utcnow\(\) is deprecated:DeprecationWarning:reactivex\.internal\.basic
    # Suppress timing-guard soft budget warning lines (we rely on durations report instead)
    ignore:\[timing-guard] Soft budget .* exceeded:UserWarning:
    # Suppress benign unclosed socket ResourceWarning emitted during teardown of ephemeral localhost servers (source varies, often <sys>)
    ignore:unclosed <socket\.socket .*?>:ResourceWarning:
    # Fallback: suppress any remaining ResourceWarnings globally in CI where origin is non-deterministic
    ignore::ResourceWarning