name: Auto Maintenance

on:
  schedule:
    - cron: '25 3 * * *'  # Daily env/metrics doc regen
    - cron: '15 2 * * 1'  # Weekly dependency audit (Monday 02:15 UTC)
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  regen-docs-and-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps (minimal)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Regenerate environment docs
        run: |
          python scripts/gen_env_docs.py || echo 'env doc generation failed (non-fatal)'
      - name: Regenerate metrics catalog (best-effort)
        run: |
          python scripts/gen_metrics_catalog.py || echo 'metrics catalog generation failed (non-fatal)'
      - name: Detect changes
        id: gitdiff
        run: |
          git config user.name 'github-actions'
          git config user.email 'actions@users.noreply.github.com'
          if git diff --quiet; then
            echo 'changed=false' >> $GITHUB_OUTPUT
          else
            echo 'changed=true' >> $GITHUB_OUTPUT
          fi
      - name: Commit & push changes
        if: steps.gitdiff.outputs.changed == 'true'
        run: |
          git add docs/ env_dict.md || true
          git commit -m 'chore(auto): regenerate env & metrics docs [skip ci]' || echo 'nothing to commit'
          git push origin HEAD:${{ github.ref_name }}

  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip pip-audit safety
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Security audit
        continue-on-error: true
        run: |
          pip-audit -r requirements.txt || true
          safety check -r requirements.txt || true
      - name: Create issue on findings
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: 'Dependency audit findings'
          content-filepath: audit_results.txt
          labels: security, automated
