name: release-automation

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_override:
        description: 'Explicit version override (optional)'
        required: false
      perf_budget_p95_ms:
        description: 'Perf budget p95 (ms)'
        required: false
        default: '40'

jobs:
  orchestrate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps (minimal runtime + sbom + dev)
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,sbom]

      - name: Determine version
        id: ver
        run: |
          if [ -n "${{ github.event.inputs.version_override }}" ]; then
            echo "version=${{ github.event.inputs.version_override }}" >> $GITHUB_OUTPUT
          else
            # Use tag name without refs/tags/ prefix if present
            if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
              echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
            else
              echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run release automation
        id: rel
        run: |
          set -e
          PERF=${{ github.event.inputs.perf_budget_p95_ms }}
          EXTRA=""
          if [ -n "$PERF" ]; then
            EXTRA="--perf-budget-p95-ms $PERF"
          fi
          python scripts/release_automation.py \
            --version "${{ steps.ver.outputs.version }}" \
            --sbom --sign --provenance --allow-soft-fail sign \
            $EXTRA > release_summary.json
          echo "summary=$(cat release_summary.json | tr '\n' ' ' | sed 's/"/'"'"/g')" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: g6-release-${{ steps.ver.outputs.version }}
          path: |
            dist/dashboards_manifest_${{ steps.ver.outputs.version }}.json
            dist/dashboards_${{ steps.ver.outputs.version }}.tar.gz
            dist/dashboards_${{ steps.ver.outputs.version }}.tar.gz.sha256
            dist/sbom_${{ steps.ver.outputs.version }}.json
            dist/provenance_${{ steps.ver.outputs.version }}.json
            release_summary.json
          if-no-files-found: warn

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.version }}
          name: G6 Release ${{ steps.ver.outputs.version }}
          draft: false
          prerelease: ${{ contains(steps.ver.outputs.version, 'dev') }}
          files: |
            dist/dashboards_${{ steps.ver.outputs.version }}.tar.gz
            dist/dashboards_${{ steps.ver.outputs.version }}.tar.gz.sha256
            dist/dashboards_manifest_${{ steps.ver.outputs.version }}.json
            dist/sbom_${{ steps.ver.outputs.version }}.json
            dist/provenance_${{ steps.ver.outputs.version }}.json
          body: |
            Automated release via release_automation.

            Summary JSON:
            ```
            ${{ steps.rel.outputs.summary }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
